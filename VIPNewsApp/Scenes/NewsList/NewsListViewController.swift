//
//  NewsListViewController.swift
//  VIPNewsApp
//
//  Created by admin on 7.11.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewsListDisplayLogic: class
{
    func displayFetchedNews(viewModel: News.FetchPost.ViewModel)
}

class NewsListViewController: UIViewController, NewsListDisplayLogic
{
  var interactor: NewsListBusinessLogic?
  var router: (NSObjectProtocol & NewsListRoutingLogic & NewsListDataPassing)?
    private var newData : [Article] = []

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = NewsListInteractor()
    let presenter = NewsListPresenter()
    let router = NewsListRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
      getNewsList()
  }
  

  
}
extension NewsListViewController {
    func displayFetchedNews(viewModel: News.FetchPost.ViewModel) {
        self.newData = viewModel.post ?? [Article]()
    }
    
    private func getNewsList()
    {
        let request = News.FetchPost.Request()
        interactor?.fetchNews(request: request)
    }
}
