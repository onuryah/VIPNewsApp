//
//  NewsListWorker.swift
//  VIPNewsApp
//
//  Created by admin on 7.11.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

class NewsListWorker
{
    func fetchNews(completionHandler: @escaping([Article]?, Error?) -> Void) {
        let urlString = UrlClass().getNewsUrl()
        DispatchQueue.main.async {
            AF.request(urlString, method: .get).validate().responseData { (response) in
                switch response.result {
                case .success(let value):
                    do {
                        let responseModel = try JSONDecoder().decode(NewsModel.self, from: value)
                        guard responseModel.status == "ok" else {return}
                        completionHandler(responseModel.articles, nil)
                    } catch let err {
                        print(String(describing: err))
                    }
                case .failure(let err):
                    completionHandler(nil, err)
                }
            }
        }
    }
    
    func showActivityIndicator(viewForActivityIndicator: UIView, activityIndicatorView: UIActivityIndicatorView,favoritesCount: Int, loadingTextLabel: UILabel, view: UIView) {
        viewForActivityIndicator.frame = CGRect(x: 0.0, y: 0.0, width: view.frame.size.width, height: view.frame.size.height)
        viewForActivityIndicator.backgroundColor = UIColor.white
        view.addSubview(viewForActivityIndicator)

        activityIndicatorView.center = CGPoint(x: view.frame.size.width / 2.0, y: view.frame.size.height / 2.0)

        loadingTextLabel.textColor = UIColor.black
        loadingTextLabel.text = "Favorites count: \(favoritesCount)"
        loadingTextLabel.font = UIFont(name: "Avenir Light", size: 14)
        loadingTextLabel.sizeToFit()
        loadingTextLabel.center = CGPoint(x: activityIndicatorView.center.x, y: activityIndicatorView.center.y + 30)
        viewForActivityIndicator.addSubview(loadingTextLabel)

        activityIndicatorView.hidesWhenStopped = true
        activityIndicatorView.style = .gray
        viewForActivityIndicator.addSubview(activityIndicatorView)
        activityIndicatorView.startAnimating()
    }
    
    func stopActivityIndicator(viewForActivityIndicator: UIView, activityIndicatorView: UIActivityIndicatorView) {
        viewForActivityIndicator.removeFromSuperview()
        activityIndicatorView.stopAnimating()
        activityIndicatorView.hidesWhenStopped = true
    }
}
